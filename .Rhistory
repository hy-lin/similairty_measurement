pIDs <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
sessions <- c(1, 2)
for (i in pIDs){
pIDs[i]
}
for (i in pIDs){
i
}
print(i)
for (i in pIDs){
print(i)
}
log(1)
log(2pi)
log(2*pi)
log(2*pi * 5)
log(2*pi) + log(5)
PC = c(.9, .73, .6)
N = c(4, 8, 12)
K = (PC * 2 - 1) * N
K
PC = c(1.0, 1.0, 0.95, 0.9, 0.65, 0.6)
N = c(1, 2, 3, 4, 8, 12)
K = (PC * 2 - 1) * N
plot(N, K, ylim = c(0, 5))
lines(N, K, ylim = c(0, 5))
shiny::runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw')
step(1, 5)
1:8
1:8:0.1
1:0.1:8
linspace(1, 8, 100)
seq(from = 1, to = 8, length = 100)
help(randn)
?? randn
x <- seq(0, 3, length = 30)
y <- rnorm(x, mean = 0.5, sd = 1)
y
y <- rnorm(x, mean = 0.5, sd = 0.3)
y
y <- dnorm(x, mean = 0.5, sd = 0.3)
y
y <- pnorm(x, mean = 0.5, sd = 0.3)
y
y <- pexp(x,rate = 1)
y
plot(x, y)
y <- dexp(x,rate = 1)
plot(x, y)
y <- dnorm(x, mean = 0.5, sd = 0.3)
plot(x, y)
x <- seq(0, 1.5, length = 30)
y <- dchisq(x, 1)
x <- seq(0, 1.5, length = 30)
plot(x, y)
y <- dchisq(x, 2)
plot(x, y)
barplot(height = y)
barplot(height = y)
lines(x, y)
lines(x, y)
lines(x, y, col = 'blue')
barplot(height = y)
lines(x, y, col = 'blue')
lines(y, col = 'blue')
plot(x, y, type = 'l')
plot(x, y, type = 'l', col = 'b')
plot(x, y, type = 'l', col = 'blue')
x <- seq(0, 1.5, length = 30)
y <- dnorm(x, mean = 0.5, sd = 0.3)
plot(x, y, type = 'l', col = 'blue')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw')
x <- seq(0, 1.5, length = 30)
y <- dexp(x,rate = 1.2)
plot(x, y, type = 'l', col = 'blue')
plot(x, y, type = 'l', col = 'blue', ylim = c(0, 1.5))
y <- dchisq(x, 2)
plot(x, y, type = 'l', col = 'blue', ylim = c(0, 1.5))
y <- dnorm(x, mean = 0.5, sd = 0.3)
plot(x, y, type = 'l', col = 'blue', ylim = c(0, 1.5))
samples <- rexp(input$n_sample,rate = 1)
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw')
samples <- rexp(5,rate = 1)
sample
samples
lines(samples)
lines(samples, 1.0)
rep(1,0, 5)
lines(samples, rep(1.0, len(samples)))
lines(samples, rep(1.0, length(samples)))
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw')
samples <- rexp(5,rate = 1)
samples
samples <- rexp(5,rate = 1)
samples
samples <- rexp(5,rate = 1)
samples
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
RT[0] = 0
RT = []
RT = 0:0
RT
RT = array()
RT
RT = c(RT, 1)
RT
install.packages("ggplot2")
help std
sd
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
seq(1, 100, 5)
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
n_simulation = 100
n_rep = seq(1, 100, 5)
RT = rep(0, length(n_rep))
RT_sd = rep(0, length(n_rep))
get_sample <- function(dist_name, n_sample){
x <- seq(0.0, 3.0, length = 100)
if (dist_name == 'Normal'){
y <- dnorm(x+0.3, mean = 0.75, sd = 0.3)
samples <- rnorm(n_sample, mean = 0.75, sd = 0.3) +0.3
}
if (dist_name == 'Exponetial'){
y <- dexp(x+0.3,rate = 1)
samples <- rexp(n_sample,rate = 1) +0.3
}
if (dist_name == 'ChiSquare'){
y <- dchisq(x+0.3, 1)
samples <- rchisq(n_sample, 1) +0.3
}
samples[samples < 0.3] = 0.3
return(samples)
}
dist_name = 'Normal'
for (i in n_rep){
tmp_RT = rep(0, n_simulation)
for (l in 1:n_simulation){
samples <- get_sample(dist_name, i)
tmp_RT[l] = min(samples)
}
RT[i] = mean(tmp_RT)
RT_sd[i] = sd(tmp_RT)
}
n_simulation = 100
n_rep = seq(1, 100, 5)
RT = rep(0, length(n_rep))
RT_sd = rep(0, length(n_rep))
for (i in 1:length(n_rep)){
tmp_RT = rep(0, n_simulation)
for (l in 1:n_simulation){
samples <- get_sample(dist_name, n_rep[i])
tmp_RT[l] = min(samples)
}
RT[i] = mean(tmp_RT)
RT_sd[i] = sd(tmp_RT)
}
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
setwd("~/GitHub/similairty_measurement")
library(BayesFactor)
loadTrialData <- function(exp, pID, session, task){
if (task == 'pair'){
sim_matrix <- as.matrix(read.table(sprintf('Data/Experiment%d/TrialsDetail/PairWise_%03d_%02d.dat', exp, pID, session), sep = '\t'))
# trim off the last column
sim_matrix <- sim_matrix[,-ncol(sim_matrix)]
}
else{
sim_matrix <- as.matrix(read.table(sprintf('Data/Experiment%d/TrialsDetail/MultiItemsArrangement_%03d_%02d.dat', exp, pID, session), sep = '\t'))
# trim off the last column
sim_matrix <- sim_matrix[,-ncol(sim_matrix)]
}
return(sim_matrix)
}
getData <- function(exp, participants, task){
if (task == 'pair'){
data <- matrix(data = NA, nrow = 0, ncol = 6)
for (pID in participants){
data <- rbind(data, cbind(pID, loadTrialData(exp, pID, 1, 'pair')))
}
data <- data.frame(data)
names(data) <- c('ID', 'TrialInd', 'ItemL', 'ItemR', 'Similarity', 'RT')
data$ID <- factor(data$ID)
data$TrialInd <- factor(data$TrialInd)
data$ItemL <- factor(data$ItemL)
data$ItemR <- factor(data$ItemR)
}
else{
data <- matrix(data = NA, nrow = 0, ncol = 27)
for (pID in participants){
data <- rbind(data, cbind(pID, loadTrialData(exp, pID, 1, 'multi')))
}
data <- data.frame(data)
names(data) <- c('ID', 'TrialInd', 'Item1', 'x1', 'y1'
, 'Item2', 'x2', 'y2'
, 'Item3', 'x3', 'y3'
, 'Item4', 'x4', 'y4'
, 'Item5', 'x5', 'y5'
, 'Item6', 'x6', 'y6'
, 'Item7', 'x7', 'y7'
, 'Item8', 'x8', 'y8'
, 'RT')
data$ID <- factor(data$ID)
data$TrialInd <- factor(data$TrialInd)
data$Item1 <- factor(data$Item1)
data$Item2 <- factor(data$Item2)
data$Item3 <- factor(data$Item3)
data$Item4 <- factor(data$Item4)
data$Item5 <- factor(data$Item5)
data$Item6 <- factor(data$Item6)
data$Item7 <- factor(data$Item7)
data$Item8 <- factor(data$Item8)
}
data$RT <- data$RT/1000
return(data)
}
exp1.pair.data <- getData(1, c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'pair')
exp1.multi.data <- getData(1, c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'multi')
exp2.pair.data <- getData(2, c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'pair')
exp2.multi.data <- getData(2, c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'multi')
exp2.RT.pair <- data.frame(aggregate(list(exp2.pair.data$RT), list(exp2.pair.data$ID), sum))
exp2.RT.multi <- data.frame(aggregate(list(exp2.multi.data$RT), list(exp2.multi.data$ID), sum))
exp2.RT.trial.pair <- data.frame(aggregate(list(exp2.pair.data$RT), list(exp2.pair.data$ID), mean))
exp2.RT.trial.multi <- data.frame(aggregate(list(exp2.multi.data$RT), list(exp2.multi.data$ID), mean))
exp2.RT.trial <- exp2.RT.trial.pair
exp2.RT.trial[, 3] <- exp2.RT.trial.multi[, 2]
names(exp2.RT.trial) <- c('ID', 'MultiRT', 'PairRT')
summary(exp2.RT.trial)
