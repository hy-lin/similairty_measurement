knitr::opts_chunk$set(echo = FALSE)
knitr::include_graphics("images/tree.png")
knitr::include_graphics("images/NN.png")
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics("ResponseDistributionData.png")
library(reader)
library(BayesFactor)
# data_VWM <- read.csv("D:/Hsuan-Yu Lin/Documents/Dropbox/Personal stuff/data_VWM.csv")
data_VWM <- read.csv("D:/Dropbox/Personal stuff/data_VWM.csv")
data_VWM['pID'] = NaN
for (sz in seq(10)){
start = (sz-1) * 960 + 1
end = sz * 960
for (i in seq(start,end)){
data_VWM$pID[i] = sz
}
}
data_VWM['ProbeSeq'] <- c(1, 2)
data_VWM$Probe.type <- factor(data_VWM$Probe.type)
data_VWM$pID <- factor(data_VWM$pID)
data_VWM$Setsize <- factor(data_VWM$Setsize)
data_VWM$CueInterval <- factor(data_VWM$CueInterval)
data_VWM$ProbeSeq <- factor(data_VWM$ProbeSeq)
summary(data_VWM)
data_VWM$RT[data_VWM$FEEDBACK == 0] = NaN
data_VWM$PC[data_VWM$RT >= 3.5] = NaN
data_VWM$RT[data_VWM$RT >= 3.5] = NaN
summary(data_VWM)
data <- data.frame(aggregate(list(data_VWM$FEEDBACK, data_VWM$RT),
list(data_VWM$pID, data_VWM$Setsize, data_VWM$Probe.type, data_VWM$CueInterval, data_VWM$ProbeSeq),
mean, na.rm = TRUE))
names(data) <- c('pID', 'Setsize', 'ProbeType', 'CueInterval', 'ProbeSeq', 'PC', 'RT')
## PC
tapply(data$PC, data$Setsize, summary)
tapply(data$PC, data$ProbeType, summary)
tapply(data$PC, data$CueInterval, summary)
tapply(data$PC, data$ProbeSeq, summary)
sz.probetype <- anovaBF(PC ~ ProbeType * Setsize + pID, data=data, whichRandom = 'pID')
sz.probetype
sz.probetype[4]/sz.probetype[3]  # strong evidence support interaction
probetype.cueinterval <- anovaBF(PC ~ CueInterval * ProbeType + pID, data=data, whichRandom = 'pID')
probetype.cueinterval # weak evidence against cue interval
probetype.cueinterval[4]/probetype.cueinterval[3] # strong evidence against interaction
probeseq.cueinterval <- anovaBF(PC ~ ProbeSeq * CueInterval + pID, data=data, whichRandom = 'pID')
probeseq.cueinterval # strong evidence supports ProbeSeq
probeseq.probetype <- anovaBF(PC ~ ProbeSeq * CueInterval + pID, data = data, whichRandom = 'pID')
probeseq.probetype
probeseq.probetype <- anovaBF(PC ~ ProbeSeq * ProbeType + pID, data = data, whichRandom = 'pID')
probeseq.probetype
probeseq.probetype[4]/probeseq.probetype[3]
source('~/GitHub/similairty_measurement/Analysis/ValidityNReliability.R', echo=TRUE)
setwd("~/GitHub/similairty_measurement")
source('~/GitHub/similairty_measurement/Analysis/ValidityNReliability.R', echo=TRUE)
View(exp1.data)
cite(phytools)
help("phytools")
